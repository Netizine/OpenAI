<?xml version="1.0" encoding="utf-8"?><model><node name="tests" testCount="(785 tests)" status="Success"><node name="Netizine.OpenAI.Tests" testCount="(785 tests)" status="Success"><node name="OpenAI.Tests" testCount="(785 tests)" status="Success"><node name="Entities" testCount="(50 tests)" status="Success"><node name="Completions" testCount="(5 tests)" status="Success"><node name="CompletionTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="CompletionTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="CompletionTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="CompletionTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="CompletionTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node></node><node name="Edits" testCount="(5 tests)" status="Success"><node name="EditTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="EditTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="EditTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="EditTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="EditTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node></node><node name="Embeddings" testCount="(5 tests)" status="Success"><node name="EmbeddingTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="EmbeddingTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="EmbeddingTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="EmbeddingTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="EmbeddingTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node></node><node name="Engines" testCount="(5 tests)" status="Success"><node name="EngineTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="EngineTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="EngineTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="EngineTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="EngineTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node></node><node name="Files" testCount="(5 tests)" status="Success"><node name="FileTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="FileTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="FileTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="FileTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="FileTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node></node><node name="FineTunes" testCount="(10 tests)" status="Success"><node name="FineTuneEventTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="FineTuneEventTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="FineTuneEventTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="FineTuneEventTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="FineTuneEventTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="FineTuneTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="FineTuneTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="FineTuneTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="FineTuneTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="FineTuneTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node></node><node name="Images" testCount="(5 tests)" status="Success"><node name="ImageTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="ImageTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="ImageTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="ImageTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="ImageTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node></node><node name="Models" testCount="(5 tests)" status="Success"><node name="ModelTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="ModelTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="ModelTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="ModelTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="ModelTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node></node><node name="Moderations" testCount="(5 tests)" status="Success"><node name="ModerationTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="ModerationTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="ModerationTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="ModerationTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node><node name="ModerationTest" testCount="(1 test)" status="Success"><node name="Deserialize" status="Success" /></node></node></node><node name="Services" testCount="(230 tests)" status="Success"><node name="ChatCompletions" testCount="(10 tests)" status="Success"><node name="ChatGPT3CompletionServiceTest" testCount="(2 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /></node><node name="ChatGPT3CompletionServiceTest" testCount="(2 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /></node><node name="ChatGPT3CompletionServiceTest" testCount="(2 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /></node><node name="ChatGPT3CompletionServiceTest" testCount="(2 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /></node><node name="ChatGPT3CompletionServiceTest" testCount="(2 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /></node></node><node name="Completions" testCount="(10 tests)" status="Success"><node name="CompletionServiceTest" testCount="(2 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /></node><node name="CompletionServiceTest" testCount="(2 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /></node><node name="CompletionServiceTest" testCount="(2 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /></node><node name="CompletionServiceTest" testCount="(2 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /></node><node name="CompletionServiceTest" testCount="(2 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /></node></node><node name="Edits" testCount="(10 tests)" status="Success"><node name="EditServiceTest" testCount="(2 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /></node><node name="EditServiceTest" testCount="(2 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /></node><node name="EditServiceTest" testCount="(2 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /></node><node name="EditServiceTest" testCount="(2 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /></node><node name="EditServiceTest" testCount="(2 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /></node></node><node name="Embeddings" testCount="(10 tests)" status="Success"><node name="EmbeddingServiceTest" testCount="(2 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /></node><node name="EmbeddingServiceTest" testCount="(2 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /></node><node name="EmbeddingServiceTest" testCount="(2 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /></node><node name="EmbeddingServiceTest" testCount="(2 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /></node><node name="EmbeddingServiceTest" testCount="(2 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /></node></node><node name="Engines" testCount="(20 tests)" status="Success"><node name="EngineServiceTest" testCount="(4 tests)" status="Success"><node name="Get" status="Success" /><node name="GetAsync" status="Success" /><node name="List" status="Success" /><node name="ListAsync" status="Success" /></node><node name="EngineServiceTest" testCount="(4 tests)" status="Success"><node name="Get" status="Success" /><node name="GetAsync" status="Success" /><node name="List" status="Success" /><node name="ListAsync" status="Success" /></node><node name="EngineServiceTest" testCount="(4 tests)" status="Success"><node name="Get" status="Success" /><node name="GetAsync" status="Success" /><node name="List" status="Success" /><node name="ListAsync" status="Success" /></node><node name="EngineServiceTest" testCount="(4 tests)" status="Success"><node name="Get" status="Success" /><node name="GetAsync" status="Success" /><node name="List" status="Success" /><node name="ListAsync" status="Success" /></node><node name="EngineServiceTest" testCount="(4 tests)" status="Success"><node name="Get" status="Success" /><node name="GetAsync" status="Success" /><node name="List" status="Success" /><node name="ListAsync" status="Success" /></node></node><node name="Files" testCount="(50 tests)" status="Success"><node name="FileContentServiceTest" testCount="(2 tests)" status="Success"><node name="Get" status="Success" /><node name="GetAsync" status="Success" /></node><node name="FileContentServiceTest" testCount="(2 tests)" status="Success"><node name="Get" status="Success" /><node name="GetAsync" status="Success" /></node><node name="FileContentServiceTest" testCount="(2 tests)" status="Success"><node name="Get" status="Success" /><node name="GetAsync" status="Success" /></node><node name="FileContentServiceTest" testCount="(2 tests)" status="Success"><node name="Get" status="Success" /><node name="GetAsync" status="Success" /></node><node name="FileContentServiceTest" testCount="(2 tests)" status="Success"><node name="Get" status="Success" /><node name="GetAsync" status="Success" /></node><node name="FileServiceTest" testCount="(8 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /><node name="Delete" status="Success" /><node name="DeleteAsync" status="Success" /><node name="Get" status="Success" /><node name="GetAsync" status="Success" /><node name="List" status="Success" /><node name="ListAsync" status="Success" /></node><node name="FileServiceTest" testCount="(8 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /><node name="Delete" status="Success" /><node name="DeleteAsync" status="Success" /><node name="Get" status="Success" /><node name="GetAsync" status="Success" /><node name="List" status="Success" /><node name="ListAsync" status="Success" /></node><node name="FileServiceTest" testCount="(8 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /><node name="Delete" status="Success" /><node name="DeleteAsync" status="Success" /><node name="Get" status="Success" /><node name="GetAsync" status="Success" /><node name="List" status="Success" /><node name="ListAsync" status="Success" /></node><node name="FileServiceTest" testCount="(8 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /><node name="Delete" status="Success" /><node name="DeleteAsync" status="Success" /><node name="Get" status="Success" /><node name="GetAsync" status="Success" /><node name="List" status="Success" /><node name="ListAsync" status="Success" /></node><node name="FileServiceTest" testCount="(8 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /><node name="Delete" status="Success" /><node name="DeleteAsync" status="Success" /><node name="Get" status="Success" /><node name="GetAsync" status="Success" /><node name="List" status="Success" /><node name="ListAsync" status="Success" /></node></node><node name="FineTunes" testCount="(50 tests)" status="Success"><node name="FineTuneEventsServiceTest" testCount="(2 tests)" status="Success"><node name="Get" status="Success" /><node name="GetAsync" status="Success" /></node><node name="FineTuneEventsServiceTest" testCount="(2 tests)" status="Success"><node name="Get" status="Success" /><node name="GetAsync" status="Success" /></node><node name="FineTuneEventsServiceTest" testCount="(2 tests)" status="Success"><node name="Get" status="Success" /><node name="GetAsync" status="Success" /></node><node name="FineTuneEventsServiceTest" testCount="(2 tests)" status="Success"><node name="Get" status="Success" /><node name="GetAsync" status="Success" /></node><node name="FineTuneEventsServiceTest" testCount="(2 tests)" status="Success"><node name="Get" status="Success" /><node name="GetAsync" status="Success" /></node><node name="FineTuneServiceTest" testCount="(8 tests)" status="Success"><node name="Cancel" status="Success" /><node name="CancelAsync" status="Success" /><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /><node name="Get" status="Success" /><node name="GetAsync" status="Success" /><node name="List" status="Success" /><node name="ListAsync" status="Success" /></node><node name="FineTuneServiceTest" testCount="(8 tests)" status="Success"><node name="Cancel" status="Success" /><node name="CancelAsync" status="Success" /><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /><node name="Get" status="Success" /><node name="GetAsync" status="Success" /><node name="List" status="Success" /><node name="ListAsync" status="Success" /></node><node name="FineTuneServiceTest" testCount="(8 tests)" status="Success"><node name="Cancel" status="Success" /><node name="CancelAsync" status="Success" /><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /><node name="Get" status="Success" /><node name="GetAsync" status="Success" /><node name="List" status="Success" /><node name="ListAsync" status="Success" /></node><node name="FineTuneServiceTest" testCount="(8 tests)" status="Success"><node name="Cancel" status="Success" /><node name="CancelAsync" status="Success" /><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /><node name="Get" status="Success" /><node name="GetAsync" status="Success" /><node name="List" status="Success" /><node name="ListAsync" status="Success" /></node><node name="FineTuneServiceTest" testCount="(8 tests)" status="Success"><node name="Cancel" status="Success" /><node name="CancelAsync" status="Success" /><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /><node name="Get" status="Success" /><node name="GetAsync" status="Success" /><node name="List" status="Success" /><node name="ListAsync" status="Success" /></node></node><node name="Images" testCount="(30 tests)" status="Success"><node name="ImageServiceTest" testCount="(6 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /><node name="CreateVariation" status="Success" /><node name="CreateVariationAsync" status="Success" /><node name="Edit" status="Success" /><node name="EditAsync" status="Success" /></node><node name="ImageServiceTest" testCount="(6 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /><node name="CreateVariation" status="Success" /><node name="CreateVariationAsync" status="Success" /><node name="Edit" status="Success" /><node name="EditAsync" status="Success" /></node><node name="ImageServiceTest" testCount="(6 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /><node name="CreateVariation" status="Success" /><node name="CreateVariationAsync" status="Success" /><node name="Edit" status="Success" /><node name="EditAsync" status="Success" /></node><node name="ImageServiceTest" testCount="(6 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /><node name="CreateVariation" status="Success" /><node name="CreateVariationAsync" status="Success" /><node name="Edit" status="Success" /><node name="EditAsync" status="Success" /></node><node name="ImageServiceTest" testCount="(6 tests)" status="Success"><node name="Create" status="Success" /><node name="CreateAsync" status="Success" /><node name="CreateVariation" status="Success" /><node name="CreateVariationAsync" status="Success" /><node name="Edit" status="Success" /><node name="EditAsync" status="Success" /></node></node><node name="Models" testCount="(30 tests)" status="Success"><node name="ModelServiceTest" testCount="(6 tests)" status="Success"><node name="Delete" status="Success" /><node name="DeleteAsync" status="Success" /><node name="Get" status="Success" /><node name="GetAsync" status="Success" /><node name="List" status="Success" /><node name="ListAsync" status="Success" /></node><node name="ModelServiceTest" testCount="(6 tests)" status="Success"><node name="Delete" status="Success" /><node name="DeleteAsync" status="Success" /><node name="Get" status="Success" /><node name="GetAsync" status="Success" /><node name="List" status="Success" /><node name="ListAsync" status="Success" /></node><node name="ModelServiceTest" testCount="(6 tests)" status="Success"><node name="Delete" status="Success" /><node name="DeleteAsync" status="Success" /><node name="Get" status="Success" /><node name="GetAsync" status="Success" /><node name="List" status="Success" /><node name="ListAsync" status="Success" /></node><node name="ModelServiceTest" testCount="(6 tests)" status="Success"><node name="Delete" status="Success" /><node name="DeleteAsync" status="Success" /><node name="Get" status="Success" /><node name="GetAsync" status="Success" /><node name="List" status="Success" /><node name="ListAsync" status="Success" /></node><node name="ModelServiceTest" testCount="(6 tests)" status="Success"><node name="Delete" status="Success" /><node name="DeleteAsync" status="Success" /><node name="Get" status="Success" /><node name="GetAsync" status="Success" /><node name="List" status="Success" /><node name="ListAsync" status="Success" /></node></node><node name="Moderations" testCount="(10 tests)" status="Success"><node name="ModerationServiceTest" testCount="(2 tests)" status="Success"><node name="Get" status="Success" /><node name="GetAsync" status="Success" /></node><node name="ModerationServiceTest" testCount="(2 tests)" status="Success"><node name="Get" status="Success" /><node name="GetAsync" status="Success" /></node><node name="ModerationServiceTest" testCount="(2 tests)" status="Success"><node name="Get" status="Success" /><node name="GetAsync" status="Success" /></node><node name="ModerationServiceTest" testCount="(2 tests)" status="Success"><node name="Get" status="Success" /><node name="GetAsync" status="Success" /></node><node name="ModerationServiceTest" testCount="(2 tests)" status="Success"><node name="Get" status="Success" /><node name="GetAsync" status="Success" /></node></node></node><node name="AllOpenAIObjectClassesPresentInDictionary" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="AllOpenAIObjectClassesPresentInDictionary" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="AllOpenAIObjectClassesPresentInDictionary" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="AllOpenAIObjectClassesPresentInDictionary" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="AllOpenAIObjectClassesPresentInDictionary" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="AnyOfConverterTest" testCount="(7 tests)" status="Success"><node name="DeserializeFirstType" status="Success" /><node name="DeserializeNull" status="Success" /><node name="DeserializeSecondType" status="Success" /><node name="DeserializeUnexpectedType" status="Success" /><node name="SerializeFirstType" status="Success" /><node name="SerializeNull" status="Success" /><node name="SerializeSecondType" status="Success" /></node><node name="AnyOfConverterTest" testCount="(7 tests)" status="Success"><node name="DeserializeFirstType" status="Success" /><node name="DeserializeNull" status="Success" /><node name="DeserializeSecondType" status="Success" /><node name="DeserializeUnexpectedType" status="Success" /><node name="SerializeFirstType" status="Success" /><node name="SerializeNull" status="Success" /><node name="SerializeSecondType" status="Success" /></node><node name="AnyOfConverterTest" testCount="(7 tests)" status="Success"><node name="DeserializeFirstType" status="Success" /><node name="DeserializeNull" status="Success" /><node name="DeserializeSecondType" status="Success" /><node name="DeserializeUnexpectedType" status="Success" /><node name="SerializeFirstType" status="Success" /><node name="SerializeNull" status="Success" /><node name="SerializeSecondType" status="Success" /></node><node name="AnyOfConverterTest" testCount="(7 tests)" status="Success"><node name="DeserializeFirstType" status="Success" /><node name="DeserializeNull" status="Success" /><node name="DeserializeSecondType" status="Success" /><node name="DeserializeUnexpectedType" status="Success" /><node name="SerializeFirstType" status="Success" /><node name="SerializeNull" status="Success" /><node name="SerializeSecondType" status="Success" /></node><node name="AnyOfConverterTest" testCount="(7 tests)" status="Success"><node name="DeserializeFirstType" status="Success" /><node name="DeserializeNull" status="Success" /><node name="DeserializeSecondType" status="Success" /><node name="DeserializeUnexpectedType" status="Success" /><node name="SerializeFirstType" status="Success" /><node name="SerializeNull" status="Success" /><node name="SerializeSecondType" status="Success" /></node><node name="AnyOfTest" testCount="(3 tests)" status="Success"><node name="Ctor_Variant2Types" status="Success" /><node name="Ctor_Variant3Types" status="Success" /><node name="ImplicitOperator_ReturnsNullForNullValuesRegardlessOfType" status="Success" /></node><node name="AnyOfTest" testCount="(3 tests)" status="Success"><node name="Ctor_Variant2Types" status="Success" /><node name="Ctor_Variant3Types" status="Success" /><node name="ImplicitOperator_ReturnsNullForNullValuesRegardlessOfType" status="Success" /></node><node name="AnyOfTest" testCount="(3 tests)" status="Success"><node name="Ctor_Variant2Types" status="Success" /><node name="Ctor_Variant3Types" status="Success" /><node name="ImplicitOperator_ReturnsNullForNullValuesRegardlessOfType" status="Success" /></node><node name="AnyOfTest" testCount="(3 tests)" status="Success"><node name="Ctor_Variant2Types" status="Success" /><node name="Ctor_Variant3Types" status="Success" /><node name="ImplicitOperator_ReturnsNullForNullValuesRegardlessOfType" status="Success" /></node><node name="AnyOfTest" testCount="(3 tests)" status="Success"><node name="Ctor_Variant2Types" status="Success" /><node name="Ctor_Variant3Types" status="Success" /><node name="ImplicitOperator_ReturnsNullForNullValuesRegardlessOfType" status="Success" /></node><node name="BaseOptionsTest" testCount="(1 test)" status="Success"><node name="SerializeAndDeserializeExtraParams" status="Success" /></node><node name="BaseOptionsTest" testCount="(1 test)" status="Success"><node name="SerializeAndDeserializeExtraParams" status="Success" /></node><node name="BaseOptionsTest" testCount="(1 test)" status="Success"><node name="SerializeAndDeserializeExtraParams" status="Success" /></node><node name="BaseOptionsTest" testCount="(1 test)" status="Success"><node name="SerializeAndDeserializeExtraParams" status="Success" /></node><node name="BaseOptionsTest" testCount="(1 test)" status="Success"><node name="SerializeAndDeserializeExtraParams" status="Success" /></node><node name="CorrectJsonConvertersForTypes" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="CorrectJsonConvertersForTypes" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="CorrectJsonConvertersForTypes" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="CorrectJsonConvertersForTypes" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="CorrectJsonConvertersForTypes" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="DontForgetEntityType" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="DontForgetEntityType" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="DontForgetEntityType" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="DontForgetEntityType" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="DontForgetEntityType" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="DontForgetIHasInterfaces" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="DontForgetIHasInterfaces" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="DontForgetIHasInterfaces" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="DontForgetIHasInterfaces" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="DontForgetIHasInterfaces" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="DontSerializeNullDeletedAttrs" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="DontSerializeNullDeletedAttrs" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="DontSerializeNullDeletedAttrs" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="DontSerializeNullDeletedAttrs" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="DontSerializeNullDeletedAttrs" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="EnumDeserializationTest" testCount="(3 tests)" status="Success"><node name="DecodingShouldThrowIfValueNotDeclaredInEnum" status="Success" /><node name="EnumDecodeValueWithEnumMember" status="Success" /><node name="EnumDecodeValueWithoutEnumMember" status="Success" /></node><node name="EnumDeserializationTest" testCount="(3 tests)" status="Success"><node name="DecodingShouldThrowIfValueNotDeclaredInEnum" status="Success" /><node name="EnumDecodeValueWithEnumMember" status="Success" /><node name="EnumDecodeValueWithoutEnumMember" status="Success" /></node><node name="EnumDeserializationTest" testCount="(3 tests)" status="Success"><node name="DecodingShouldThrowIfValueNotDeclaredInEnum" status="Success" /><node name="EnumDecodeValueWithEnumMember" status="Success" /><node name="EnumDecodeValueWithoutEnumMember" status="Success" /></node><node name="EnumDeserializationTest" testCount="(3 tests)" status="Success"><node name="DecodingShouldThrowIfValueNotDeclaredInEnum" status="Success" /><node name="EnumDecodeValueWithEnumMember" status="Success" /><node name="EnumDecodeValueWithoutEnumMember" status="Success" /></node><node name="EnumDeserializationTest" testCount="(3 tests)" status="Success"><node name="DecodingShouldThrowIfValueNotDeclaredInEnum" status="Success" /><node name="EnumDecodeValueWithEnumMember" status="Success" /><node name="EnumDecodeValueWithoutEnumMember" status="Success" /></node><node name="FormEncoderTest" testCount="(8 tests)" status="Success"><node name="CreateHttpContent_NoStream" status="Success" /><node name="CreateHttpContent_Null" status="Success" /><node name="CreateHttpContent_Stream" status="Success" /><node name="CreateQueryString" status="Success" /><node name="EnumEncodeUnknownValue" status="Success" /><node name="EnumEncodeValidValue" status="Success" /><node name="IgnoresCulture" status="Success" /><node name="UrlEncodesKeysAndValues" status="Success" /></node><node name="FormEncoderTest" testCount="(8 tests)" status="Success"><node name="CreateHttpContent_NoStream" status="Success" /><node name="CreateHttpContent_Null" status="Success" /><node name="CreateHttpContent_Stream" status="Success" /><node name="CreateQueryString" status="Success" /><node name="EnumEncodeUnknownValue" status="Success" /><node name="EnumEncodeValidValue" status="Success" /><node name="IgnoresCulture" status="Success" /><node name="UrlEncodesKeysAndValues" status="Success" /></node><node name="FormEncoderTest" testCount="(8 tests)" status="Success"><node name="CreateHttpContent_NoStream" status="Success" /><node name="CreateHttpContent_Null" status="Success" /><node name="CreateHttpContent_Stream" status="Success" /><node name="CreateQueryString" status="Success" /><node name="EnumEncodeUnknownValue" status="Success" /><node name="EnumEncodeValidValue" status="Success" /><node name="IgnoresCulture" status="Success" /><node name="UrlEncodesKeysAndValues" status="Success" /></node><node name="FormEncoderTest" testCount="(8 tests)" status="Success"><node name="CreateHttpContent_NoStream" status="Success" /><node name="CreateHttpContent_Null" status="Success" /><node name="CreateHttpContent_Stream" status="Success" /><node name="CreateQueryString" status="Success" /><node name="EnumEncodeUnknownValue" status="Success" /><node name="EnumEncodeValidValue" status="Success" /><node name="IgnoresCulture" status="Success" /><node name="UrlEncodesKeysAndValues" status="Success" /></node><node name="FormEncoderTest" testCount="(8 tests)" status="Success"><node name="CreateHttpContent_NoStream" status="Success" /><node name="CreateHttpContent_Null" status="Success" /><node name="CreateHttpContent_Stream" status="Success" /><node name="CreateQueryString" status="Success" /><node name="EnumEncodeUnknownValue" status="Success" /><node name="EnumEncodeValidValue" status="Success" /><node name="IgnoresCulture" status="Success" /><node name="UrlEncodesKeysAndValues" status="Success" /></node><node name="FormUrlEncodedContentTest" testCount="(8 tests)" status="Success"><node name="Ctor_EmptySource_CorrectMediaTypeAndCharset" status="Success" /><node name="Ctor_EmptySource_Succeed" status="Success" /><node name="Ctor_NullSource_ThrowsArgumentNullException" status="Success" /><node name="Ctor_OneEntry_SeparatedByEquals" status="Success" /><node name="Ctor_OneUnicodeEntry_Encoded" status="Success" /><node name="Ctor_TwoEntries_SeparatedByAnd" status="Success" /><node name="Ctor_WithSpaces_EncodedAsPlus" status="Success" /><node name="Ctor_WithSquareBrackets_Unencoded" status="Success" /></node><node name="FormUrlEncodedContentTest" testCount="(8 tests)" status="Success"><node name="Ctor_EmptySource_CorrectMediaTypeAndCharset" status="Success" /><node name="Ctor_EmptySource_Succeed" status="Success" /><node name="Ctor_NullSource_ThrowsArgumentNullException" status="Success" /><node name="Ctor_OneEntry_SeparatedByEquals" status="Success" /><node name="Ctor_OneUnicodeEntry_Encoded" status="Success" /><node name="Ctor_TwoEntries_SeparatedByAnd" status="Success" /><node name="Ctor_WithSpaces_EncodedAsPlus" status="Success" /><node name="Ctor_WithSquareBrackets_Unencoded" status="Success" /></node><node name="FormUrlEncodedContentTest" testCount="(8 tests)" status="Success"><node name="Ctor_EmptySource_CorrectMediaTypeAndCharset" status="Success" /><node name="Ctor_EmptySource_Succeed" status="Success" /><node name="Ctor_NullSource_ThrowsArgumentNullException" status="Success" /><node name="Ctor_OneEntry_SeparatedByEquals" status="Success" /><node name="Ctor_OneUnicodeEntry_Encoded" status="Success" /><node name="Ctor_TwoEntries_SeparatedByAnd" status="Success" /><node name="Ctor_WithSpaces_EncodedAsPlus" status="Success" /><node name="Ctor_WithSquareBrackets_Unencoded" status="Success" /></node><node name="FormUrlEncodedContentTest" testCount="(8 tests)" status="Success"><node name="Ctor_EmptySource_CorrectMediaTypeAndCharset" status="Success" /><node name="Ctor_EmptySource_Succeed" status="Success" /><node name="Ctor_NullSource_ThrowsArgumentNullException" status="Success" /><node name="Ctor_OneEntry_SeparatedByEquals" status="Success" /><node name="Ctor_OneUnicodeEntry_Encoded" status="Success" /><node name="Ctor_TwoEntries_SeparatedByAnd" status="Success" /><node name="Ctor_WithSpaces_EncodedAsPlus" status="Success" /><node name="Ctor_WithSquareBrackets_Unencoded" status="Success" /></node><node name="FormUrlEncodedContentTest" testCount="(8 tests)" status="Success"><node name="Ctor_EmptySource_CorrectMediaTypeAndCharset" status="Success" /><node name="Ctor_EmptySource_Succeed" status="Success" /><node name="Ctor_NullSource_ThrowsArgumentNullException" status="Success" /><node name="Ctor_OneEntry_SeparatedByEquals" status="Success" /><node name="Ctor_OneUnicodeEntry_Encoded" status="Success" /><node name="Ctor_TwoEntries_SeparatedByAnd" status="Success" /><node name="Ctor_WithSpaces_EncodedAsPlus" status="Success" /><node name="Ctor_WithSquareBrackets_Unencoded" status="Success" /></node><node name="JsonNamesAreSnakeCase" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="JsonNamesAreSnakeCase" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="JsonNamesAreSnakeCase" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="JsonNamesAreSnakeCase" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="JsonNamesAreSnakeCase" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="JsonNamesMatchPropertyNames" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="JsonNamesMatchPropertyNames" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="JsonNamesMatchPropertyNames" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="JsonNamesMatchPropertyNames" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="JsonNamesMatchPropertyNames" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="JsonUtilsTest" testCount="(2 tests)" status="Success"><node name="DeserializeObjectIgnoresDefaultSettings" status="Success" /><node name="SerializeObjectIgnoresDefaultSettings" status="Success" /></node><node name="JsonUtilsTest" testCount="(2 tests)" status="Success"><node name="DeserializeObjectIgnoresDefaultSettings" status="Success" /><node name="SerializeObjectIgnoresDefaultSettings" status="Success" /></node><node name="JsonUtilsTest" testCount="(2 tests)" status="Success"><node name="DeserializeObjectIgnoresDefaultSettings" status="Success" /><node name="SerializeObjectIgnoresDefaultSettings" status="Success" /></node><node name="JsonUtilsTest" testCount="(2 tests)" status="Success"><node name="DeserializeObjectIgnoresDefaultSettings" status="Success" /><node name="SerializeObjectIgnoresDefaultSettings" status="Success" /></node><node name="JsonUtilsTest" testCount="(2 tests)" status="Success"><node name="DeserializeObjectIgnoresDefaultSettings" status="Success" /><node name="SerializeObjectIgnoresDefaultSettings" status="Success" /></node><node name="MimeTypesTest" testCount="(4 tests)" status="Success"><node name="GetMimeType_KnownExtension_Success" status="Success" /><node name="GetMimeType_KnownExtensionWithoutLeadingDot_Success" status="Success" /><node name="GetMimeType_Null_ThrowsArgumentNullException" status="Success" /><node name="GetMimeType_UnknownExtension_Success" status="Success" /></node><node name="MimeTypesTest" testCount="(4 tests)" status="Success"><node name="GetMimeType_KnownExtension_Success" status="Success" /><node name="GetMimeType_KnownExtensionWithoutLeadingDot_Success" status="Success" /><node name="GetMimeType_Null_ThrowsArgumentNullException" status="Success" /><node name="GetMimeType_UnknownExtension_Success" status="Success" /></node><node name="MimeTypesTest" testCount="(4 tests)" status="Success"><node name="GetMimeType_KnownExtension_Success" status="Success" /><node name="GetMimeType_KnownExtensionWithoutLeadingDot_Success" status="Success" /><node name="GetMimeType_Null_ThrowsArgumentNullException" status="Success" /><node name="GetMimeType_UnknownExtension_Success" status="Success" /></node><node name="MimeTypesTest" testCount="(4 tests)" status="Success"><node name="GetMimeType_KnownExtension_Success" status="Success" /><node name="GetMimeType_KnownExtensionWithoutLeadingDot_Success" status="Success" /><node name="GetMimeType_Null_ThrowsArgumentNullException" status="Success" /><node name="GetMimeType_UnknownExtension_Success" status="Success" /></node><node name="MimeTypesTest" testCount="(4 tests)" status="Success"><node name="GetMimeType_KnownExtension_Success" status="Success" /><node name="GetMimeType_KnownExtensionWithoutLeadingDot_Success" status="Success" /><node name="GetMimeType_Null_ThrowsArgumentNullException" status="Success" /><node name="GetMimeType_UnknownExtension_Success" status="Success" /></node><node name="MultipartFormDataContentTest" testCount="(7 tests)" status="Success"><node name="Ctor_EmptySource_CorrectMediaType" status="Success" /><node name="Ctor_EmptySource_Success" status="Success" /><node name="Ctor_NullSource_ThrowsArgumentNullException" status="Success" /><node name="Ctor_OneNonStringNonStreamEntry_ThrowsArgumentException" status="Success" /><node name="Ctor_OneStreamEntry_Success" status="Success" /><node name="Ctor_OneStringEntry_Success" status="Success" /><node name="Ctor_TwoEntries_Success" status="Success" /></node><node name="MultipartFormDataContentTest" testCount="(7 tests)" status="Success"><node name="Ctor_EmptySource_CorrectMediaType" status="Success" /><node name="Ctor_EmptySource_Success" status="Success" /><node name="Ctor_NullSource_ThrowsArgumentNullException" status="Success" /><node name="Ctor_OneNonStringNonStreamEntry_ThrowsArgumentException" status="Success" /><node name="Ctor_OneStreamEntry_Success" status="Success" /><node name="Ctor_OneStringEntry_Success" status="Success" /><node name="Ctor_TwoEntries_Success" status="Success" /></node><node name="MultipartFormDataContentTest" testCount="(7 tests)" status="Success"><node name="Ctor_EmptySource_CorrectMediaType" status="Success" /><node name="Ctor_EmptySource_Success" status="Success" /><node name="Ctor_NullSource_ThrowsArgumentNullException" status="Success" /><node name="Ctor_OneNonStringNonStreamEntry_ThrowsArgumentException" status="Success" /><node name="Ctor_OneStreamEntry_Success" status="Success" /><node name="Ctor_OneStringEntry_Success" status="Success" /><node name="Ctor_TwoEntries_Success" status="Success" /></node><node name="MultipartFormDataContentTest" testCount="(7 tests)" status="Success"><node name="Ctor_EmptySource_CorrectMediaType" status="Success" /><node name="Ctor_EmptySource_Success" status="Success" /><node name="Ctor_NullSource_ThrowsArgumentNullException" status="Success" /><node name="Ctor_OneNonStringNonStreamEntry_ThrowsArgumentException" status="Success" /><node name="Ctor_OneStreamEntry_Success" status="Success" /><node name="Ctor_OneStringEntry_Success" status="Success" /><node name="Ctor_TwoEntries_Success" status="Success" /></node><node name="MultipartFormDataContentTest" testCount="(7 tests)" status="Success"><node name="Ctor_EmptySource_CorrectMediaType" status="Success" /><node name="Ctor_EmptySource_Success" status="Success" /><node name="Ctor_NullSource_ThrowsArgumentNullException" status="Success" /><node name="Ctor_OneNonStringNonStreamEntry_ThrowsArgumentException" status="Success" /><node name="Ctor_OneStreamEntry_Success" status="Success" /><node name="Ctor_OneStringEntry_Success" status="Success" /><node name="Ctor_TwoEntries_Success" status="Success" /></node><node name="NetworkRetriesTest" testCount="(8 tests)" status="Success"><node name="DoNotRetryOnCancel" status="Success" /><node name="RethrowHttpRequestExceptionAfterAllAttempts" status="Success" /><node name="RethrowTimeoutExceptionAfterAllAttempts" status="Success" /><node name="RetryOnConflict" status="Success" /><node name="RetryOnHttpRequestException" status="Success" /><node name="RetryOnInternalServerError" status="Success" /><node name="RetryOnServiceUnavailable" status="Success" /><node name="RetryOnTimeout" status="Success" /></node><node name="NetworkRetriesTest" testCount="(8 tests)" status="Success"><node name="DoNotRetryOnCancel" status="Success" /><node name="RethrowHttpRequestExceptionAfterAllAttempts" status="Success" /><node name="RethrowTimeoutExceptionAfterAllAttempts" status="Success" /><node name="RetryOnConflict" status="Success" /><node name="RetryOnHttpRequestException" status="Success" /><node name="RetryOnInternalServerError" status="Success" /><node name="RetryOnServiceUnavailable" status="Success" /><node name="RetryOnTimeout" status="Success" /></node><node name="NetworkRetriesTest" testCount="(8 tests)" status="Success"><node name="DoNotRetryOnCancel" status="Success" /><node name="RethrowHttpRequestExceptionAfterAllAttempts" status="Success" /><node name="RethrowTimeoutExceptionAfterAllAttempts" status="Success" /><node name="RetryOnConflict" status="Success" /><node name="RetryOnHttpRequestException" status="Success" /><node name="RetryOnInternalServerError" status="Success" /><node name="RetryOnServiceUnavailable" status="Success" /><node name="RetryOnTimeout" status="Success" /></node><node name="NetworkRetriesTest" testCount="(8 tests)" status="Success"><node name="DoNotRetryOnCancel" status="Success" /><node name="RethrowHttpRequestExceptionAfterAllAttempts" status="Success" /><node name="RethrowTimeoutExceptionAfterAllAttempts" status="Success" /><node name="RetryOnConflict" status="Success" /><node name="RetryOnHttpRequestException" status="Success" /><node name="RetryOnInternalServerError" status="Success" /><node name="RetryOnServiceUnavailable" status="Success" /><node name="RetryOnTimeout" status="Success" /></node><node name="NetworkRetriesTest" testCount="(8 tests)" status="Success"><node name="DoNotRetryOnCancel" status="Success" /><node name="RethrowHttpRequestExceptionAfterAllAttempts" status="Success" /><node name="RethrowTimeoutExceptionAfterAllAttempts" status="Success" /><node name="RetryOnConflict" status="Success" /><node name="RetryOnHttpRequestException" status="Success" /><node name="RetryOnInternalServerError" status="Success" /><node name="RetryOnServiceUnavailable" status="Success" /><node name="RetryOnTimeout" status="Success" /></node><node name="NoDuplicateJsonPropertyValues" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="NoDuplicateJsonPropertyValues" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="NoDuplicateJsonPropertyValues" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="NoDuplicateJsonPropertyValues" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="NoDuplicateJsonPropertyValues" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="NullableValueTypes" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="NullableValueTypes" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="NullableValueTypes" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="NullableValueTypes" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="NullableValueTypes" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="OpenAIClientTest" testCount="(7 tests)" status="Success"><node name="Ctor_DoesNotThrowsIfApiKeyIsNull" status="Success" /><node name="Ctor_ThrowsIfApiKeyContainsWhitespace" status="Success" /><node name="Ctor_ThrowsIfApiKeyIsEmpty" status="Success" /><node name="RequestAsync_Error_InvalidErrorObject" status="Success" /><node name="RequestAsync_Error_InvalidJson" status="Success" /><node name="RequestAsync_OkResponse" status="Success" /><node name="RequestAsync_OkResponse_InvalidJson" status="Success" /></node><node name="OpenAIClientTest" testCount="(7 tests)" status="Success"><node name="Ctor_DoesNotThrowsIfApiKeyIsNull" status="Success" /><node name="Ctor_ThrowsIfApiKeyContainsWhitespace" status="Success" /><node name="Ctor_ThrowsIfApiKeyIsEmpty" status="Success" /><node name="RequestAsync_Error_InvalidErrorObject" status="Success" /><node name="RequestAsync_Error_InvalidJson" status="Success" /><node name="RequestAsync_OkResponse" status="Success" /><node name="RequestAsync_OkResponse_InvalidJson" status="Success" /></node><node name="OpenAIClientTest" testCount="(7 tests)" status="Success"><node name="Ctor_DoesNotThrowsIfApiKeyIsNull" status="Success" /><node name="Ctor_ThrowsIfApiKeyContainsWhitespace" status="Success" /><node name="Ctor_ThrowsIfApiKeyIsEmpty" status="Success" /><node name="RequestAsync_Error_InvalidErrorObject" status="Success" /><node name="RequestAsync_Error_InvalidJson" status="Success" /><node name="RequestAsync_OkResponse" status="Success" /><node name="RequestAsync_OkResponse_InvalidJson" status="Success" /></node><node name="OpenAIClientTest" testCount="(7 tests)" status="Success"><node name="Ctor_DoesNotThrowsIfApiKeyIsNull" status="Success" /><node name="Ctor_ThrowsIfApiKeyContainsWhitespace" status="Success" /><node name="Ctor_ThrowsIfApiKeyIsEmpty" status="Success" /><node name="RequestAsync_Error_InvalidErrorObject" status="Success" /><node name="RequestAsync_Error_InvalidJson" status="Success" /><node name="RequestAsync_OkResponse" status="Success" /><node name="RequestAsync_OkResponse_InvalidJson" status="Success" /></node><node name="OpenAIClientTest" testCount="(7 tests)" status="Success"><node name="Ctor_DoesNotThrowsIfApiKeyIsNull" status="Success" /><node name="Ctor_ThrowsIfApiKeyContainsWhitespace" status="Success" /><node name="Ctor_ThrowsIfApiKeyIsEmpty" status="Success" /><node name="RequestAsync_Error_InvalidErrorObject" status="Success" /><node name="RequestAsync_Error_InvalidJson" status="Success" /><node name="RequestAsync_OkResponse" status="Success" /><node name="RequestAsync_OkResponse_InvalidJson" status="Success" /></node><node name="OpenAIConfigurationTest" testCount="(4 tests)" status="Success"><node name="OpenAIClient_Getter_CreatesNewOpenAIClientIfNullAndApiKeyIsNull" status="Success" /><node name="OpenAIClient_Getter_CreatesNewOpenAIClientIfNullAndApiKeyIsSet" status="Success" /><node name="OpenAIClient_Getter_ThrowsIfClientIsNullAndApiKeyContainsWhitespace" status="Success" /><node name="OpenAIClient_Getter_ThrowsIfClientIsNullAndApiKeyIsEmpty" status="Success" /></node><node name="OpenAIConfigurationTest" testCount="(4 tests)" status="Success"><node name="OpenAIClient_Getter_CreatesNewOpenAIClientIfNullAndApiKeyIsNull" status="Success" /><node name="OpenAIClient_Getter_CreatesNewOpenAIClientIfNullAndApiKeyIsSet" status="Success" /><node name="OpenAIClient_Getter_ThrowsIfClientIsNullAndApiKeyContainsWhitespace" status="Success" /><node name="OpenAIClient_Getter_ThrowsIfClientIsNullAndApiKeyIsEmpty" status="Success" /></node><node name="OpenAIConfigurationTest" testCount="(4 tests)" status="Success"><node name="OpenAIClient_Getter_CreatesNewOpenAIClientIfNullAndApiKeyIsNull" status="Success" /><node name="OpenAIClient_Getter_CreatesNewOpenAIClientIfNullAndApiKeyIsSet" status="Success" /><node name="OpenAIClient_Getter_ThrowsIfClientIsNullAndApiKeyContainsWhitespace" status="Success" /><node name="OpenAIClient_Getter_ThrowsIfClientIsNullAndApiKeyIsEmpty" status="Success" /></node><node name="OpenAIConfigurationTest" testCount="(4 tests)" status="Success"><node name="OpenAIClient_Getter_CreatesNewOpenAIClientIfNullAndApiKeyIsNull" status="Success" /><node name="OpenAIClient_Getter_CreatesNewOpenAIClientIfNullAndApiKeyIsSet" status="Success" /><node name="OpenAIClient_Getter_ThrowsIfClientIsNullAndApiKeyContainsWhitespace" status="Success" /><node name="OpenAIClient_Getter_ThrowsIfClientIsNullAndApiKeyIsEmpty" status="Success" /></node><node name="OpenAIConfigurationTest" testCount="(4 tests)" status="Success"><node name="OpenAIClient_Getter_CreatesNewOpenAIClientIfNullAndApiKeyIsNull" status="Success" /><node name="OpenAIClient_Getter_CreatesNewOpenAIClientIfNullAndApiKeyIsSet" status="Success" /><node name="OpenAIClient_Getter_ThrowsIfClientIsNullAndApiKeyContainsWhitespace" status="Success" /><node name="OpenAIClient_Getter_ThrowsIfClientIsNullAndApiKeyIsEmpty" status="Success" /></node><node name="OpenAIEntityConverterTest" testCount="(3 tests)" status="Success"><node name="DeserializeChild" status="Success" /><node name="DeserializeNull" status="Success" /><node name="DeserializeRoot" status="Success" /></node><node name="OpenAIEntityConverterTest" testCount="(3 tests)" status="Success"><node name="DeserializeChild" status="Success" /><node name="DeserializeNull" status="Success" /><node name="DeserializeRoot" status="Success" /></node><node name="OpenAIEntityConverterTest" testCount="(3 tests)" status="Success"><node name="DeserializeChild" status="Success" /><node name="DeserializeNull" status="Success" /><node name="DeserializeRoot" status="Success" /></node><node name="OpenAIEntityConverterTest" testCount="(3 tests)" status="Success"><node name="DeserializeChild" status="Success" /><node name="DeserializeNull" status="Success" /><node name="DeserializeRoot" status="Success" /></node><node name="OpenAIEntityConverterTest" testCount="(3 tests)" status="Success"><node name="DeserializeChild" status="Success" /><node name="DeserializeNull" status="Success" /><node name="DeserializeRoot" status="Success" /></node><node name="OpenAIEntityTest" testCount="(7 tests)" status="Success"><node name="FromJsonAuto" status="Success" /><node name="FromJsonAutoNoObject" status="Success" /><node name="FromJsonAutoUnknownObject" status="Success" /><node name="FromJsonGeneric" status="Success" /><node name="FromJsonOnType" status="Success" /><node name="RawJObject" status="Success" /><node name="ToJson" status="Success" /></node><node name="OpenAIEntityTest" testCount="(7 tests)" status="Success"><node name="FromJsonAuto" status="Success" /><node name="FromJsonAutoNoObject" status="Success" /><node name="FromJsonAutoUnknownObject" status="Success" /><node name="FromJsonGeneric" status="Success" /><node name="FromJsonOnType" status="Success" /><node name="RawJObject" status="Success" /><node name="ToJson" status="Success" /></node><node name="OpenAIEntityTest" testCount="(7 tests)" status="Success"><node name="FromJsonAuto" status="Success" /><node name="FromJsonAutoNoObject" status="Success" /><node name="FromJsonAutoUnknownObject" status="Success" /><node name="FromJsonGeneric" status="Success" /><node name="FromJsonOnType" status="Success" /><node name="RawJObject" status="Success" /><node name="ToJson" status="Success" /></node><node name="OpenAIEntityTest" testCount="(7 tests)" status="Success"><node name="FromJsonAuto" status="Success" /><node name="FromJsonAutoNoObject" status="Success" /><node name="FromJsonAutoUnknownObject" status="Success" /><node name="FromJsonGeneric" status="Success" /><node name="FromJsonOnType" status="Success" /><node name="RawJObject" status="Success" /><node name="ToJson" status="Success" /></node><node name="OpenAIEntityTest" testCount="(7 tests)" status="Success"><node name="FromJsonAuto" status="Success" /><node name="FromJsonAutoNoObject" status="Success" /><node name="FromJsonAutoUnknownObject" status="Success" /><node name="FromJsonGeneric" status="Success" /><node name="FromJsonOnType" status="Success" /><node name="RawJObject" status="Success" /><node name="ToJson" status="Success" /></node><node name="OpenAIRequestTest" testCount="(5 tests)" status="Success"><node name="Ctor_DeleteRequest" status="Success" /><node name="Ctor_GetRequest" status="Success" /><node name="Ctor_PostRequest" status="Success" /><node name="Ctor_RequestOptions" status="Success" /><node name="Ctor_ThrowsIfApiKeyIsNull" status="Success" /></node><node name="OpenAIRequestTest" testCount="(5 tests)" status="Success"><node name="Ctor_DeleteRequest" status="Success" /><node name="Ctor_GetRequest" status="Success" /><node name="Ctor_PostRequest" status="Success" /><node name="Ctor_RequestOptions" status="Success" /><node name="Ctor_ThrowsIfApiKeyIsNull" status="Success" /></node><node name="OpenAIRequestTest" testCount="(5 tests)" status="Success"><node name="Ctor_DeleteRequest" status="Success" /><node name="Ctor_GetRequest" status="Success" /><node name="Ctor_PostRequest" status="Success" /><node name="Ctor_RequestOptions" status="Success" /><node name="Ctor_ThrowsIfApiKeyIsNull" status="Success" /></node><node name="OpenAIRequestTest" testCount="(5 tests)" status="Success"><node name="Ctor_DeleteRequest" status="Success" /><node name="Ctor_GetRequest" status="Success" /><node name="Ctor_PostRequest" status="Success" /><node name="Ctor_RequestOptions" status="Success" /><node name="Ctor_ThrowsIfApiKeyIsNull" status="Success" /></node><node name="OpenAIRequestTest" testCount="(5 tests)" status="Success"><node name="Ctor_DeleteRequest" status="Success" /><node name="Ctor_GetRequest" status="Success" /><node name="Ctor_PostRequest" status="Success" /><node name="Ctor_RequestOptions" status="Success" /><node name="Ctor_ThrowsIfApiKeyIsNull" status="Success" /></node><node name="OpenAIResponseTest" testCount="(1 test)" status="Success"><node name="Date" status="Success" /></node><node name="OpenAIResponseTest" testCount="(1 test)" status="Success"><node name="Date" status="Success" /></node><node name="OpenAIResponseTest" testCount="(1 test)" status="Success"><node name="Date" status="Success" /></node><node name="OpenAIResponseTest" testCount="(1 test)" status="Success"><node name="Date" status="Success" /></node><node name="OpenAIResponseTest" testCount="(1 test)" status="Success"><node name="Date" status="Success" /></node><node name="OpenAITypeRegistryTest" testCount="(1 test)" status="Success"><node name="GetConcreteType" status="Success" /></node><node name="OpenAITypeRegistryTest" testCount="(1 test)" status="Success"><node name="GetConcreteType" status="Success" /></node><node name="OpenAITypeRegistryTest" testCount="(1 test)" status="Success"><node name="GetConcreteType" status="Success" /></node><node name="OpenAITypeRegistryTest" testCount="(1 test)" status="Success"><node name="GetConcreteType" status="Success" /></node><node name="OpenAITypeRegistryTest" testCount="(1 test)" status="Success"><node name="GetConcreteType" status="Success" /></node><node name="PropertiesHaveJsonAttributes" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="PropertiesHaveJsonAttributes" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="PropertiesHaveJsonAttributes" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="PropertiesHaveJsonAttributes" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="PropertiesHaveJsonAttributes" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="SerializationTest" testCount="(3 tests)" status="Success"><node name="HandleNull" status="Success" /><node name="RoundtripDatetime" status="Success" /><node name="Serialize" status="Success" /></node><node name="SerializationTest" testCount="(3 tests)" status="Success"><node name="HandleNull" status="Success" /><node name="RoundtripDatetime" status="Success" /><node name="Serialize" status="Success" /></node><node name="SerializationTest" testCount="(3 tests)" status="Success"><node name="HandleNull" status="Success" /><node name="RoundtripDatetime" status="Success" /><node name="Serialize" status="Success" /></node><node name="SerializationTest" testCount="(3 tests)" status="Success"><node name="HandleNull" status="Success" /><node name="RoundtripDatetime" status="Success" /><node name="Serialize" status="Success" /></node><node name="SerializationTest" testCount="(3 tests)" status="Success"><node name="HandleNull" status="Success" /><node name="RoundtripDatetime" status="Success" /><node name="Serialize" status="Success" /></node><node name="ServiceTest" testCount="(3 tests)" status="Success"><node name="Get_ThrowsIfIdIsEmpty" status="Success" /><node name="Get_ThrowsIfIdIsNull" status="Success" /><node name="Get_ThrowsIfIdIsWhitespace" status="Success" /></node><node name="ServiceTest" testCount="(3 tests)" status="Success"><node name="Get_ThrowsIfIdIsEmpty" status="Success" /><node name="Get_ThrowsIfIdIsNull" status="Success" /><node name="Get_ThrowsIfIdIsWhitespace" status="Success" /></node><node name="ServiceTest" testCount="(3 tests)" status="Success"><node name="Get_ThrowsIfIdIsEmpty" status="Success" /><node name="Get_ThrowsIfIdIsNull" status="Success" /><node name="Get_ThrowsIfIdIsWhitespace" status="Success" /></node><node name="ServiceTest" testCount="(3 tests)" status="Success"><node name="Get_ThrowsIfIdIsEmpty" status="Success" /><node name="Get_ThrowsIfIdIsNull" status="Success" /><node name="Get_ThrowsIfIdIsWhitespace" status="Success" /></node><node name="ServiceTest" testCount="(3 tests)" status="Success"><node name="Get_ThrowsIfIdIsEmpty" status="Success" /><node name="Get_ThrowsIfIdIsNull" status="Success" /><node name="Get_ThrowsIfIdIsWhitespace" status="Success" /></node><node name="StringUtilsTest" testCount="(3 tests)" status="Success"><node name="ContainsWhitespace" status="Success" /><node name="SecureEquals" status="Success" /><node name="ToSnakeCase" status="Success" /></node><node name="StringUtilsTest" testCount="(3 tests)" status="Success"><node name="ContainsWhitespace" status="Success" /><node name="SecureEquals" status="Success" /><node name="ToSnakeCase" status="Success" /></node><node name="StringUtilsTest" testCount="(3 tests)" status="Success"><node name="ContainsWhitespace" status="Success" /><node name="SecureEquals" status="Success" /><node name="ToSnakeCase" status="Success" /></node><node name="StringUtilsTest" testCount="(3 tests)" status="Success"><node name="ContainsWhitespace" status="Success" /><node name="SecureEquals" status="Success" /><node name="ToSnakeCase" status="Success" /></node><node name="StringUtilsTest" testCount="(3 tests)" status="Success"><node name="ContainsWhitespace" status="Success" /><node name="SecureEquals" status="Success" /><node name="ToSnakeCase" status="Success" /></node><node name="SystemNetHttpClientTest" testCount="(2 tests)" status="Success"><node name="CanInspectMaxNetworkRetries" status="Success" /><node name="MakeRequestAsync" status="Success" /></node><node name="SystemNetHttpClientTest" testCount="(2 tests)" status="Success"><node name="CanInspectMaxNetworkRetries" status="Success" /><node name="MakeRequestAsync" status="Success" /></node><node name="SystemNetHttpClientTest" testCount="(2 tests)" status="Success"><node name="CanInspectMaxNetworkRetries" status="Success" /><node name="MakeRequestAsync" status="Success" /></node><node name="SystemNetHttpClientTest" testCount="(2 tests)" status="Success"><node name="CanInspectMaxNetworkRetries" status="Success" /><node name="MakeRequestAsync" status="Success" /></node><node name="SystemNetHttpClientTest" testCount="(2 tests)" status="Success"><node name="CanInspectMaxNetworkRetries" status="Success" /><node name="MakeRequestAsync" status="Success" /></node><node name="UseListsInsteadOfArrays" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="UseListsInsteadOfArrays" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="UseListsInsteadOfArrays" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="UseListsInsteadOfArrays" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node><node name="UseListsInsteadOfArrays" testCount="(1 test)" status="Success"><node name="Check" status="Success" /></node></node></node></node></model>